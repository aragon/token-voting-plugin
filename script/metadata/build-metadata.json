{
  "ui": {},
  "change": "v1.4\n - Supporting tokens that index based on timestamp.\n- Allowing to freeze token minting.\n- Allowing to exclude addresses from the total supply.",
  "pluginSetup": {
    "prepareInstallation": {
      "description": "The information required for the installation.",
      "inputs": [
        {
          "components": [
            {
              "name": "votingMode",
              "type": "uint8",
              "internalType": "enum MajorityVotingBase.VotingMode",
              "description": "A parameter to select the vote mode. In standard mode (0), early execution and vote replacement are disabled. In early execution mode (1), a proposal can be executed early before the end date if the vote outcome cannot mathematically change by more voters voting. In vote replacement mode (2), voters can change their vote multiple times and only the latest vote option is tallied."
            },
            {
              "name": "supportThreshold",
              "type": "uint32",
              "internalType": "uint32",
              "description": "The support threshold value. Its value has to be in the interval [0, 10^6] defined by `RATIO_BASE = 10**6`."
            },
            {
              "name": "minParticipation",
              "type": "uint32",
              "internalType": "uint32",
              "description": "The minimum participation value. Its value has to be in the interval [0, 10^6] defined by `RATIO_BASE = 10**6`."
            },
            {
              "name": "minDuration",
              "type": "uint64",
              "internalType": "uint64",
              "description": "The minimum duration of the proposal vote in seconds."
            },
            {
              "name": "minProposerVotingPower",
              "type": "uint256",
              "internalType": "uint256",
              "description": "The minimum voting power required to create a proposal."
            }
          ],
          "name": "votingSettings",
          "type": "tuple",
          "internalType": "struct MajorityVotingBase.VotingSettings",
          "description": "The voting settings that will be enforced when proposals are created."
        },
        {
          "components": [
            {
              "name": "token",
              "type": "address",
              "internalType": "address",
              "description": "The token address. If this is `address(0)`, a new `GovernanceERC20` token is deployed. If not, the existing token is wrapped as an `GovernanceWrappedERC20`."
            },
            {
              "name": "name",
              "type": "string",
              "internalType": "string",
              "description": "The token name. This parameter is only relevant if the token address is `address(0)`."
            },
            {
              "name": "symbol",
              "type": "string",
              "internalType": "string",
              "description": "The token symbol. This parameter is only relevant if the token address is `address(0)`."
            }
          ],
          "internalType": "struct TokenVotingSetup.TokenSettings",
          "name": "tokenSettings",
          "type": "tuple",
          "description": "The token settings that either specify an existing ERC-20 token (`token = address(0)`) or the name and symbol of a new `GovernanceERC20` token to be created."
        },
        {
          "components": [
            {
              "name": "receivers",
              "type": "address[]",
              "internalType": "address[]",
              "description": "The receivers of the tokens."
            },
            {
              "name": "amounts",
              "type": "uint256[]",
              "internalType": "uint256[]",
              "description": "The amounts of tokens to be minted for each receiver."
            }
          ],
          "name": "mintSettings",
          "type": "tuple",
          "internalType": "struct GovernanceERC20.MintSettings",
          "description": "The token mint settings struct containing the `receivers` and `amounts`."
        },
        {
          "components": [
            {
              "name": "target",
              "type": "address",
              "internalType": "address",
              "description": "The target contract to which actions will be forwarded to for execution."
            },
            {
              "name": "operation",
              "type": "uint8",
              "internalType": "uint8",
              "description": "The operation type(either `call` or `delegatecall`) that will be used for execution forwarding."
            }
          ],
          "internalType": "struct TokenVoting.TargetConfig",
          "name": "TargetConfig",
          "type": "tuple",
          "description": "The initial target config"
        },
        {
          "name": "minApproval",
          "type": "uint256",
          "internalType": "uint256",
          "description": "The minimum amount of yes votes needed for the proposal advance."
        },
        {
          "name": "metadata",
          "type": "bytes",
          "internalType": "bytes",
          "description": "The metadata that contains the information about the token voting plugin."
        },
        {
          "name": "excludedAccounts",
          "type": "address[]",
          "internalType": "address[]",
          "description": "The accounts to exclude from the token supply computation."
        }
      ]
    },
    "prepareUpdate": {
      "1": {
        "description": "No input is required for the update.",
        "inputs": []
      },
      "2": {
        "description": "No input is required for the update.",
        "inputs": []
      },
      "3": {
        "description": "The information required for the update.",
        "inputs": [
          {
            "name": "minApprovals",
            "type": "uint256",
            "internalType": "uint256",
            "description": "The minimum amount of yes votes needed for the proposal advance."
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address",
                "description": "The target contract to which actions will be forwarded to for execution."
              },
              {
                "internalType": "uint8",
                "name": "operation",
                "type": "uint8",
                "description": "The operation type(either `call` or `delegatecall`) that will be used for execution forwarding."
              }
            ],
            "internalType": "struct TokenVoting.TargetConfig",
            "name": "TargetConfig",
            "type": "tuple",
            "description": "The initial target config"
          },
          {
            "internalType": "bytes",
            "name": "metadata",
            "type": "bytes",
            "description": "The metadata that contains the information about the token voting plugin."
          }
        ]
      },
      "4": {
        "description": "The information required for the update.",
        "inputs": [
          {
            "name": "minApprovals",
            "type": "uint256",
            "internalType": "uint256",
            "description": "The minimum amount of yes votes needed for the proposal advance."
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address",
                "description": "The target contract to which actions will be forwarded to for execution."
              },
              {
                "internalType": "uint8",
                "name": "operation",
                "type": "uint8",
                "description": "The operation type(either `call` or `delegatecall`) that will be used for execution forwarding."
              }
            ],
            "internalType": "struct TokenVoting.TargetConfig",
            "name": "TargetConfig",
            "type": "tuple",
            "description": "The initial target config"
          },
          {
            "internalType": "bytes",
            "name": "metadata",
            "type": "bytes",
            "description": "The metadata that contains the information about the token voting plugin."
          }
        ]
      }
    },
    "prepareUninstallation": {
      "description": "No input is required for the uninstallation.",
      "inputs": []
    }
  }
}
