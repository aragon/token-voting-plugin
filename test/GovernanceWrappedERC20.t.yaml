GovernanceWrappedERC20Test:
  - given: The contract is already initialized
    comment: "initialize"
    and:
      - when: Calling initialize() again
        then:
          - it: reverts if trying to re-initialize
      - when: Checking the contract's name and symbol
        then:
          - it: sets the wrapped token name and symbol
      - when: Checking the contract's decimals without modification
        then:
          - it: should return default decimals if not modified
      - when: Checking the contract's decimals after modification
        then:
          - it: should return modified decimals

  - given: The contract is deployed
    comment: "ERC-165"
    and:
      - when: Calling supportsInterface with the empty interface
        then:
          - it: does not support the empty interface
      - when: Calling supportsInterface with the IERC165Upgradeable interface
        then:
          - it: supports the `IERC165Upgradeable` interface
      - when: Calling supportsInterface with the IGovernanceWrappedERC20 interface
        then:
          - it: supports the `IGovernanceWrappedERC20` interface
      - when: Calling supportsInterface with the IERC20Upgradeable interface
        then:
          - it: supports the `IERC20Upgradeable` interface
      - when: Calling supportsInterface with the IERC20PermitUpgradeable interface
        then:
          - it: supports the `IERC20PermitUpgradeable` interface
      - when: Calling supportsInterface with the IVotesUpgradeable interface
        then:
          - it: supports the `IVotesUpgradeable` interface
      - when: Calling supportsInterface with the IERC20MetadataUpgradeable interface
        then:
          - it: supports the `IERC20MetadataUpgradeable` interface

  - given: The contract is deployed
    comment: "depositFor"
    and:
      - given: The deposit amount is not approved
        and:
          - when: Calling depositFor()
            then:
              - it: reverts if the amount is not approved
      - given: The deposit amount is approved
        and:
          - when: Calling depositFor()
            then:
              - it: deposits an amount of tokens
      - given: The full balance is approved for deposit
        and:
          - when: Calling depositFor() with the full balance
            then:
              - it: updates the available votes

  - given: Tokens have been deposited
    comment: "withdrawTo"
    and:
      - when: Calling withdrawTo()
        then:
          - it: withdraws an amount of tokens
      - when: Calling withdrawTo() for the full balance
        then:
          - it: updates the available votes

  - given: Tokens have been deposited and approved for all holders
    comment: "delegate"
    and:
      - when: Calling delegate()
        then:
          - it: delegates voting power to another account
      - when: Calling delegate() multiple times
        then:
          - it: is checkpointed

  - given: A fresh token contract is deployed and balances are set
    comment: "afterTokenTransfer"
    and:
      - when: Minting tokens for a user
        then:
          - it: turns on delegation after mint
      - when: Transferring tokens to a user for the first time
        then:
          - it: turns on delegation for the `to` address after transfer
      - when: Transferring tokens through a chain of users
        then:
          - it: turns on delegation for all users in the chain of transfer A => B => C
      - given: The recipient has manually turned delegation off
        and:
          - when: Transferring tokens to the recipient
            then:
              - it: should not turn on delegation on `transfer` if `to` manually turned it off
          - when: Minting tokens for the recipient
            then:
              - it: should not turn on delegation on `mint` if `to` manually turned it off
      - given: The user has set a delegate before receiving tokens
        and:
          - when: Transferring tokens to the user
            then:
              - it: should not rewrite delegation setting for `transfer` if user set it on before receiving tokens
          - when: Minting tokens for the user
            then:
              - it: should not rewrite delegation setting for `mint` if user set it on before receiving tokens
      - given: Delegation was turned on in the past
        and:
          - when: Minting more tokens
            then:
              - it: should not turn on delegation on `mint` if it was turned on at least once in the past
          - when: Transferring tokens
            then:
              - it: should not turn on delegation on `transfer` if it was turned on at least once in the past
      - given: Delegation is turned on for the sender
        and:
          - when: Transferring tokens
            then:
              - it: updates voting power after transfer for `from` if delegation turned on
      - given: Delegation is turned on for the recipient
        and:
          - when: Transferring tokens
            then:
              - it: updates voting power after transfer for `to` if delegation turned on

  - given: An exhaustive test setup for token transfers
    comment: "afterTokenTransfer exhaustive tests"
    and:
      - given: The 'to' address has a zero balance
        and:
          - given: The 'to' address has delegated to 'other'
            and:
              - when: "'to' receives tokens via depositFor"
                then:
                  - it: "`to` has the correct voting power"
                  - it: "`to`s delegate has not changed"
                  - it: "`to`s delegate has the correct voting power"
              - when: "'to' receives tokens via transfer from 'from'"
                then:
                  - it: "`from` has the correct voting power"
                  - it: "`from`s delegate has not changed"
                  - it: "`from`s delegate has the correct voting power"
                  - it: "`to` has the correct voting power"
                  - it: "`to`s delegate has not changed"
                  - it: "`to`s delegate has the correct voting power"
          - given: The 'to' address has not delegated before
            and:
              - when: "'to' receives tokens via `depositFor`"
                then:
                  - it: "`to` has the correct voting power"
                  - it: "`to`s delegate has not changed"
                  - it: "`to`s delegate has the correct voting power"
              - when: "'to' receives tokens via transfer from 'from'"
                then:
                  - it: "`from` has the correct voting power"
                  - it: "`from`s delegate has not changed"
                  - it: "`from`s delegate has the correct voting power"
                  - it: "`to` has the correct voting power"
                  - it: "`to`s delegate has not changed"
                  - it: "`to`s delegate has the correct voting power"
      - given: The 'to' address has a non-zero balance
        and:
          - given: The 'to' address has delegated to 'other'
            and:
              - when: "'to' receives more tokens via `depositFor`"
                then:
                  - it: "`to` has the correct voting power"
                  - it: "`to`s delegate has not changed"
                  - it: "`to`s delegate has the correct voting power"
                and:
                  - when: "'to' then transfers tokens to 'other'"
                    then:
                      - it: "`to` has the correct voting power"
                      - it: "`to`s delegate has not changed"
                      - it: "`to`s delegate has the correct voting power"
                  - when: "'to' then re-delegates to 'other'"
                    then:
                      - it: "`to` has the correct voting power"
                      - it: "`to`s delegate is correctly changed"
                      - it: "`to`s delegate has the correct voting power"
              - when: "'to' receives more tokens via transfer from 'from'"
                then:
                  - it: "`from` has the correct voting power"
                  - it: "`from`s delegate has not changed"
                  - it: "`from`s delegate has the correct voting power"
                  - it: "`to` has the correct voting power"
                  - it: "`to`s delegate has not changed"
                  - it: "`to`s delegate has the correct voting power"
                and:
                  - when: "'to' then transfers tokens to 'other'"
                    then:
                      - it: "`to` has the correct voting power"
                      - it: "`to`s delegate has not changed"
                      - it: "`to`s delegate has the correct voting power"
                  - when: "'to' then re-delegates to 'other'"
                    then:
                      - it: "`to` has the correct voting power"
                      - it: "`to`s delegate is correctly changed"
                      - it: "`to`s delegate has the correct voting power"
          - given: The 'to' address has not delegated before receiving an initial balance
            and:
              - when: "'to' receives more tokens via `depositFor`"
                then:
                  - it: "`to` has the correct voting power"
                  - it: "`to`s delegate has not changed"
                  - it: "`to`s delegate has the correct voting power"
                and:
                  - when: "'to' then transfers tokens to 'other'"
                    then:
                      - it: "`to` has the correct voting power"
                      - it: "`to`s delegate has not changed"
                      - it: "`to`s delegate has the correct voting power"
                  - when: "'to' then delegates to 'other'"
                    then:
                      - it: "`to` has the correct voting power"
                      - it: "`to`s delegate is correctly changed"
                      - it: "`to`s delegate has the correct voting power"
              - when: "'to' receives more tokens via transfer from 'from'"
                then:
                  - it: "`from` has the correct voting power"
                  - it: "`from`s delegate has not changed"
                  - it: "`from`s delegate has the correct voting power"
                  - it: "`to` has the correct voting power"
                  - it: "`to`s delegate has not changed"
                  - it: "`to`s delegate has the correct voting power"
                and:
                  - when: "'to' then transfers tokens to 'other'"
                    then:
                      - it: "`to` has the correct voting power"
                      - it: "`to`s delegate has not changed"
                      - it: "`to`s delegate has the correct voting power"
                  - when: "'to' then delegates to 'other'"
                    then:
                      - it: "`to` has the correct voting power"
                      - it: "`to`s delegate is correctly changed"
                      - it: "`to`s delegate has the correct voting power"
